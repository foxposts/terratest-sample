name: "staging"

on:
  pull_request:
    branches:
      - staging
  push:
    branches:
      - staging

env:
  TF_VERSION: "1.3.0"
  AWS_DEFAULT_REGION: "ap-northeast-1"
  AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}

permissions:
  id-token: write
  contents: read
  actions: read
  pull-requests: write

jobs:
  terraform:
    name: "Staging-Environment"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check Diff Terraform file
        id: diff
        uses: technote-space/get-diff-action@v5
        with:
          PATTERNS: |
            terraform/staging/*.tf
            terraform/module/**/*.tf

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ env.AWS_ROLE_ARN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: true

      - name: Terraform Format
        id: fmt
        if: steps.diff.outputs.diff
        run: terraform fmt -check -recursive
        continue-on-error: true
        working-directory: ./terraform

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform/staging

      - name: Validate
        if: steps.diff.outputs.diff
        run: terraform validate
        working-directory: ./terraform

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -input=false -no-color
        continue-on-error: true
        working-directory: ./terraform/staging

      - name: Add Pull Request Comment
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style \`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Plan \`${{ steps.plan.outcome }}\`
            #### Terraform Validation \`${{ steps.validate.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Outcome
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: ./terraform/staging